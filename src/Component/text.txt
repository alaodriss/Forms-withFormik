import React from "react";
import { useFormik } from "formik";
import { TextField, Button } from "@material-ui/core";
import { makeStyles } from "@material-ui/core/styles";
// import { Field, Formik, Form } from "formik";

import "../App.css";

const useStyles = makeStyles({
  errorStyle: {
    color: "red",
    fontSize: "12px",
  },
  buttonStyle: {
    width: "15%",
    fontSize: "10px",
  },
});

function Form() {
  const classes = useStyles();

  const formik = useFormik({
    initialValues: {
      checked: [],
      firstname: "",
      lastname: "",
      email: "",
    },
    onSubmit: (values) => {
      console.log(values);
    },
    validate: (values) => {
      let errors = {};

      if (!values.checked) {
        errors.checked = "This is srequired field";
      }
      if (!values.firstname) {
        errors.firstname = "This is a required field";
      }
      if (!values.lastname) {
        errors.lastname = "This is a required field";
      }
      if (!values.email) {
        errors.email = "This is srequired field";
      }
      return errors;
    },
  });
  return (
    <form className="froms" onSubmit={formik.handleSubmit}>
        
      <div role="group" aria-labelledby="checkbox-group">
        <label>
          <TextField type="checkbox" name="checked" value={formik.values.checked} />
          Homme
        </label>
        <label>
          <TextField type="checkbox" name="checked" value={formik.values.checked} />
          Femme
        </label>

        <div>
          {formik.touched.checked && formik.errors.checked ? (
            <div className={classes.errorStyle}>{formik.errors.checked}</div>
          ) : null}
        </div>

      </div>

      <div>
        <TextField
          variant="outlined"
          label="firstname"
          size="small"
          margin="dense"
          name="firstname"
          value={formik.values.firstname}
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
        />
        <div>
          {formik.touched.firstname && formik.errors.firstname ? (
            <div className={classes.errorStyle}>{formik.errors.firstname}</div>
          ) : null}
        </div>
      </div>

      <div>
        <TextField
          variant="outlined"
          label="lastname"
          size="small"
          margin="dense"
          name="lastname"
          value={formik.values.lastname}
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
        />
        <div>
          {formik.touched.lastname && formik.errors.lastname ? (
            <div className={classes.errorStyle}>{formik.errors.lastname}</div>
          ) : null}
        </div>
      </div>

      <div>
        <TextField
          variant="outlined"
          label="email"
          margin="dense"
          name="email"
          value={formik.values.email}
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
        />
        <div>
          {formik.touched.email && formik.errors.email ? (
            <div className={classes.errorStyle}>{formik.errors.email}</div>
          ) : null}
        </div>
      </div>
      <div>
        <Button
          variant="contained"
          className={classes.buttonStyle}
          color="primary"
          size="small"
          type="submit"
        >
          Continuer
        </Button>
      </div>
    </form>
  );
}

export default Form;
